// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SocialSiteWithoutMVC.DataAccessLayer;

#nullable disable

namespace SocialSiteWithoutMVC.DataAccessLayer.Migrations
{
    [DbContext(typeof(SocialSiteDbContext))]
    [Migration("20250905130806_LastVersion")]
    partial class LastVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChatEntityUserEntity", b =>
                {
                    b.Property<int>("ChatsChatId")
                        .HasColumnType("integer");

                    b.Property<string>("UsersLogin")
                        .HasColumnType("text");

                    b.HasKey("ChatsChatId", "UsersLogin");

                    b.HasIndex("UsersLogin");

                    b.ToTable("ChatEntityUserEntity");
                });

            modelBuilder.Entity("SocialSiteWithoutMVC.DataAccessLayer.Models.ChatEntity", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChatId"));

                    b.PrimitiveCollection<int[]>("MessagesId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.PrimitiveCollection<string[]>("UserLogins")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("ChatId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("SocialSiteWithoutMVC.DataAccessLayer.Models.MessageEntity", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ChatId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SocialSiteWithoutMVC.DataAccessLayer.Models.UserEntity", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatEntityUserEntity", b =>
                {
                    b.HasOne("SocialSiteWithoutMVC.DataAccessLayer.Models.ChatEntity", null)
                        .WithMany()
                        .HasForeignKey("ChatsChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialSiteWithoutMVC.DataAccessLayer.Models.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialSiteWithoutMVC.DataAccessLayer.Models.MessageEntity", b =>
                {
                    b.HasOne("SocialSiteWithoutMVC.DataAccessLayer.Models.ChatEntity", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("SocialSiteWithoutMVC.DataAccessLayer.Models.ChatEntity", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
